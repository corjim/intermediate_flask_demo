from flask import Flask, request, render_template, redirect, session, flash
from models import db, connect_db, Department, Employee
from flask_sqlalchemy import SQLAlchemy
from forms import AddSnackForm, NewEmployeeForm
from sqlalchemy import text


app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql:///employees_db'

app.config['SQLALCHEMY_ECHO'] = True
app.app_context().push()

connect_db(app) 

app.config['SECRET_KEY'] = "HeIsTheAlpha"
app.config['DEBUG_TB_INTERCEPT_REDIRECTS'] = False

db.drop_all()
db.create_all()

# DROP TABLE if exists employees cascade;


d1 = Department(dept_code='mktg',dept_name='Marketing', phone= 99393993)

d2 = Department(dept_code='IT',dept_name='Information Tech', phone= 20355993)

d3 = Department(dept_code='act',dept_name='Accounting', phone= 993938893)

d4 = Department(dept_code='lgl',dept_name='Legal', phone=2544551)

d5 = Department(dept_code='sm',dept_name='Social Media')

d6 = Department(dept_code='HR',dept_name='Human Resources', phone=2565555)


broda = Employee(name='Broda Bennerda', state='AL', dept_code='mktg')

Jon = Employee(name='John Bull', state='AK', dept_code='act')

Ron = Employee(name='Jake Ron', state='AR', dept_code='mktg')

Obi = Employee(name='Obi Bull', state='LA', dept_code='lgl')

Eze = Employee(name='Eze Henry', state='VA', dept_code='lgl')

Stev = Employee(name='Chike Steve', state='VA', dept_code='IT')

Ada = Employee(name='Ada Love', state='AR', dept_code='HR')

Fla = Employee(name='Fla Robin', state='AK', dept_code='sm')


db.session.add_all([d1,d2,d3,d4,d5,d6])

db.session.commit()

db.session.add(broda)
db.session.add(Jon)
db.session.add(Obi)
db.session.add(Ron)
db.session.add(Stev)
db.session.add(Eze)
db.session.add(Ada)
db.session.add(Fla)

db.session.commit()

@app.route('/')
def home_page():
    return render_template('home.html')

@app.route('/phones')
def list_phones():
    emps = Employee.query.all()

    return render_template('index.html', emps=emps)


@app.route('/snack/new', methods=['GET', 'POST'])
def add_snack():

    form = AddSnackForm()

    if form.validate_on_submit():
        # the validate function checks for post request and token validation. If both are true the redirect will run else it lets the form run.

        name = form.name.data
        price = form.price.data
        flash(f'Created new snack: name is {name} and price is ${price}')
        return redirect('/')
    else:
        return render_template('addSnack.html', form=form)


#       ***     CSRF Security   ***
#       Cross_Site Request Forgery
#   A form on any site can submit to any other site!
#   This is generated by the server when a form is shown
#   It is checked by the server on form submission


@app.route('/employee/new', methods=['GET', 'POST'])
def add_employee():
    form = NewEmployeeForm()

    depts = db.session.query(Department.dept_code, Department.dept_name)
    form.dept_code.choices =depts

    if form.validate_on_submit():
        name = form.name.data
        state = form.state.data
        dept_code = form.dept_code.data

        emps = Employee(name=name, state=state, dept_code=dept_code)

        db.session.add(emps)
        db.session.commit()

        return redirect('/phones')

    else:

        return render_template('add_employee_form.html', form=form)


    #  ***  FIELD TYPES ***


#   BooleanField
#       - Normally appears as checkbox
#       -


if __name__ == "__main__":
    app.run(host='0.0.0.0', port=5503, debug=True)

